package CodeBattle.Api;

import "marine.proto";

// Error Code
// 1 - You have already create a room
// 2 - You have already join a room
// 3 - Can not found the room which you wanna join in
// 4 - The room has no place to join in  [NOT used so far]
// 5 - You can't create marine before create/join a room
// 6 - Create marine NOT in your create/join room
// 7 - You have touched the limits of this room allowed max marine creates number.






enum CmdEnum {
    createroom = 0;          // This two Commands are NOT avlid for AI.
    marinereport = 1;        // They used for Unity3d Client.

    joinroom = 2;
    createmarine = 3;
    marineoperate = 4;
}

enum MessageEnum {
    cmdresponse = 0;
    senceupdate = 1;
}


// You send this `Cmd` to Server
// You should tell the server, what the Cmd actually does.
// For example, you wanna create a marine in current game,
// so, cmd = CmdEnum.createmarine (NOTE, different language maybe have different usage of Enum type)
// then you must fill up the `CreateMarine` field.
// Other optional fields can be ignored.
message Cmd {
    required CmdEnum cmd = 1;
    optional CreateRoom crm = 2;
    optional JoinRoom jrm = 3;
    optional CreateMarine cme = 4;
    optional MarineOperate opt = 5;
}


// And got `Message` back from Server
// Same as the `Cmd`, there is also an enum field to tell you what the message is.
// if msg == MessageEnum.cmdresponse, means this is a response for your `Cmd`.
// if msg == MessageEnum.senceupdate, means the game sence has changed. 
// (There are only Marines in sence so far)
message Message {
    required MessageEnum msg = 1;
    optional CmdResponse response = 2;
    optional SenceUpdate update = 3;
}


// `CmdResponse` NOT contains `MarineOperate` command.
// Because All Marine Changes will notify you via `SenceUpdate`
message CmdResponse {
    required int32 ret = 1;         // return code, 0 for success, others see at top of this file.
    required CmdEnum cmd = 2;       // what cmd response for
    optional CreateRoomResponse crmResponse = 3;
    optional JoinRoomResponse jrmResponse = 4;
    optional CreateMarineResponse cmeResponse = 5;
}


// `SenceUpdate` only contains Marine so far.
// NOTE, ONLY contain one Marine per `SenceUpdate`,
// Which means, When one marine has changed, you will got this message.
message SenceUpdate {
    required Marine marine = 1;
}




// Commands
message CreateRoom {
    required int32 map = 1;         // which map you wanna using. 
                                    // ignore this right now. any integer will be ok.
}

message JoinRoom {
    required int32 roomid = 1;

    optional string token = 2;      // AI ignore this, It's for Unity3d Client
}


message CreateMarine {
    required int32 roomid = 1;      // you MUST create/join room first, and you will got a roomid.
    required string name = 2;       // your marine name
    required Vector2 position = 3;  // your marine birth point (MUST in the map area).
}


message MarineOperate {
    required int32 id = 1;                    // marine id
    required Status status = 2;               // new status

    optional Vector2 currentPosition = 3;     // AI just ignore this. It's for Unity3d Client.
    optional Vector2 targetPostion = 4;       // ONLY need this when status is Run or RifleAttack
    optional int32 targetMarineId = 5;        // ONLY need this when status is GunAttack
}


// Command Response
message CreateRoomResponse {
    required int32 id = 1;              // room id
    required Vector2Int size = 2;       // map size, (x, z)
}

message JoinRoomResponse {
    required int32 id = 1;              // room id
    required Vector2Int size = 2;       // map size, (x, z)
}


message CreateMarineResponse {
    required int32 id = 1;              // your marine id
}